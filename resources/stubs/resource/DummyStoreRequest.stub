<?php

namespace App\Http\Requests;

use App\Models\SingularBaseClass;
use Illuminate\Support\Facades\DB;
use Illuminate\Validation\Validator;
use Nexus\Http\Requests\NexusFormRequest;

class StoreSingularBaseClass extends NexusFormRequest
{
    /**
    * Persist the request to the repository.
    *
    * @return mixed
    */
    public function persist()
    {
        return DB::transaction(function () {
            $item = SingularBaseClass::create(
                $this->only([
                    'name',
                ])
            );

            return $item;
        });
    }

    /**
    * Get the validation rules that apply to the request.
    *
    * @return array
    */
    public function rules()
    {
        return [
            'name' => 'required',
        ];
    }

    /**
    * Get custom messages for validator errors.
    *
    * @return array
    */
    public function messages()
    {
        return [];
    }

    /**
    * Configure the validator instance.
    *
    * @param  \Illuminate\Validation\Validator  $validator
    * @return void
    */
    public function withValidator(Validator $validator)
    {
        $validator->after(function ($validator) {
            // if (false) {
            //     $validator->errors()->add('field', 'Invalid field.');
            // }
        });
    }

    /**
    * Prepare the data for validation.
    *
    * @return void
    */
    protected function prepareForValidation()
    {
        //
    }

    /**
    * Handle a passed validation attempt.
    *
    * @return void
    */
    protected function passedValidation()
    {
        //
    }
}
